{"remainingRequest":"C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ekko.guo\\Desktop\\collection\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ekko.guo\\Desktop\\collection\\src\\App.vue","mtime":1647909577127},{"path":"C:\\Users\\ekko.guo\\Desktop\\collection\\babel.config.js","mtime":1638519783748},{"path":"C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Dialog } from 'vant'; // import { Toast } from 'vant'\n// import { Icon } from 'vant'\n\nimport { areaList } from '@vant/area-data';\nimport { getIdentityTypes, collectInfo, getOrderInfo } from '@/api/user';\nimport { Message } from 'element-ui';\nimport moment from 'moment';\nimport vueQr from 'vue-qr';\nexport default {\n  name: 'App',\n  components: {\n    vueQr: vueQr\n  },\n  data: function data() {\n    return {\n      visible: false,\n      haha: false,\n      active: 'a',\n      list: [],\n      phoneValue: '',\n      loading: false,\n      finished: false,\n      showPickerOne: false,\n      showPickerTwo: false,\n      showPickerThree: false,\n      pickerShow: false,\n      idCode: null,\n      areaList: areaList,\n      pickerType: 'one',\n      areaPicker: false,\n      // credTypeColumns: ['居民身份证', '居民户口簿', '护照', '军官证', '驾驶证', '港澳居民来往内地通行证', '台湾居民来往内地通行证', '其他法定有效证件'],\n      credTypeColumns: [],\n      genderColumns: ['请选择性别', '女', '男'],\n      ruleForm: {\n        name: '',\n        identityTypeText: '',\n        identityType: '',\n        identityCode: '',\n        gender: '',\n        genderText: '',\n        age: '',\n        phoneNumber: '',\n        address: '',\n        city: '',\n        county: '',\n        province: '',\n        goodAddress: ''\n      },\n      resDacontent: {}\n    };\n  },\n  mounted: function mounted() {// this.onSearch()\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    formatterTime: function formatterTime(val) {\n      return val !== null ? moment(val).format('yyyy-MM-DD') : '';\n    },\n    validator: function validator(val) {\n      if (this.ruleForm.identityTypeText === '身份证') {\n        var card15 = /^[1-9]\\d{5}\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{2}[0-9Xx]$/;\n        var card18 = /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;\n        return card15.test(val) || card18.test(val);\n      } else {\n        var card5 = /[\\u4E00-\\u9FA5]/g;\n        return !card5.test(val);\n      }\n    },\n    validatorAge: function validatorAge(val) {\n      console.log(val);\n\n      if (val > 120) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    validatorPhone: function validatorPhone(val) {\n      var card = /^[1][3,4,5,7,8][0-9]{9}$/;\n      return card.test(val);\n    },\n    init: function init() {\n      var _this = this;\n\n      getIdentityTypes().then(function (res) {\n        if (res.dataContent !== null) {\n          _this.handleData(res.dataContent);\n        }\n      }).catch(function (err) {\n        Message.error(err.message);\n      });\n    },\n    handleData: function handleData(data) {\n      var arr = [];\n      this.credTypeColumns = [];\n      data.forEach(function (element) {\n        var obj = {};\n        obj.code = element.code;\n        obj.text = element.name;\n        arr.push(obj);\n      });\n      this.credTypeColumns = arr;\n    },\n    //\n    onClick: function onClick(name, title) {\n      if (name === 'b') {\n        this.loading = false;\n        this.finished = true;\n      }\n    },\n    //\n    onConfirmCred: function onConfirmCred(value, index) {\n      this.ruleForm.identityTypeText = value.text;\n      this.ruleForm.identityType = value.code;\n      this.showPickerOne = false;\n    },\n    onConfirmGender: function onConfirmGender(value, index) {\n      if (value === '请选择性别') {\n        this.ruleForm.genderText = '';\n      } else if (value === '男') {\n        this.ruleForm.gender = 'Male';\n        this.ruleForm.genderText = '男';\n      } else {\n        this.ruleForm.gender = 'Female';\n        this.ruleForm.genderText = '女';\n      }\n\n      this.showPickerTwo = false;\n    },\n    onConfirmArea: function onConfirmArea(value) {\n      // this.ruleForm.address = value\n      if (value.length >= 0) {\n        this.ruleForm.province = value[0].name;\n        this.ruleForm.city = value[1].name;\n        this.ruleForm.county = value[2].name;\n        this.ruleForm.goodAddress = value[0].name + value[1].name + value[2].name;\n      }\n\n      this.showPickerThree = false;\n    },\n    onSubmit: function onSubmit(values) {\n      var _this2 = this;\n\n      var obj = {\n        address: {\n          address: this.ruleForm.address,\n          city: this.ruleForm.city,\n          county: this.ruleForm.county,\n          province: this.ruleForm.province\n        },\n        age: this.ruleForm.age,\n        gender: this.ruleForm.gender,\n        identityCode: this.ruleForm.identityCode,\n        identityType: this.ruleForm.identityType,\n        name: this.ruleForm.name,\n        phoneNumber: this.ruleForm.phoneNumber\n      };\n      collectInfo(obj).then(function (res) {\n        _this2.resDacontent = {};\n        _this2.resDacontent = res.dataContent;\n        _this2.visible = true;\n      }).catch(function (err) {\n        if (err) {\n          Dialog.alert({\n            title: '注意',\n            message: err.message\n          }).then(function () {// on close+\n          });\n        }\n      });\n    },\n    onFailed: function onFailed(errorInfo) {\n      // errorInfo: { values: object, errors: object[] }\n      if (errorInfo.errors.length > 0) {\n        Dialog.alert({\n          title: '注意',\n          message: errorInfo.errors[0].message,\n          confirmButtonColor: '#004B97'\n        }).then(function () {// on close+\n        });\n      }\n    },\n    closedHandle: function closedHandle() {\n      this.cleanFormData();\n      this.resDacontent = {};\n      this.visible = false;\n    },\n    cleanFormData: function cleanFormData() {\n      this.ruleForm = {\n        name: '',\n        identityTypeText: '',\n        identityType: '',\n        identityCode: '',\n        gender: '',\n        genderText: '',\n        age: '',\n        phoneNumber: '',\n        address: '',\n        city: '',\n        county: '',\n        province: '',\n        goodAddress: ''\n      };\n    },\n    onSearch: function onSearch() {\n      var _this3 = this;\n\n      this.loading = true;\n\n      if (this.validatorPhone(this.phoneValue)) {\n        getOrderInfo(this.phoneValue).then(function (res) {\n          console.log(res);\n\n          if (res.dataContent !== null) {\n            _this3.list = res.dataContent;\n          }\n\n          _this3.loading = false;\n        }).catch(function (err) {\n          Message.error(err.message);\n          _this3.loading = false;\n        });\n      } else {\n        Dialog.alert({\n          title: '注意',\n          message: '请输入正确手机号码',\n          confirmButtonColor: '#004B97'\n        }).then(function () {\n          _this3.list = []; // on close+\n        });\n      }\n    },\n    cellClick: function cellClick(e) {\n      this.resDacontent.id = e.currentTarget.id;\n      this.visible = true;\n    }\n  }\n};",null]}