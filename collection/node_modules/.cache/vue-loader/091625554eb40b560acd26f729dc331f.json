{"remainingRequest":"C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ekko.guo\\Desktop\\collection\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ekko.guo\\Desktop\\collection\\src\\App.vue","mtime":1647909577127},{"path":"C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ekko.guo\\Desktop\\collection\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { Dialog } from 'vant'\r\n// import { Toast } from 'vant'\r\n// import { Icon } from 'vant'\r\nimport { areaList } from '@vant/area-data'\r\nimport { getIdentityTypes, collectInfo, getOrderInfo } from '@/api/user'\r\nimport { Message } from 'element-ui'\r\nimport moment from 'moment'\r\nimport vueQr from 'vue-qr'\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    vueQr\r\n  },\r\n  data () {\r\n    return {\r\n      visible: false,\r\n      haha: false,\r\n      active: 'a',\r\n      list: [],\r\n      phoneValue: '',\r\n      loading: false,\r\n      finished: false,\r\n      showPickerOne: false,\r\n      showPickerTwo: false,\r\n      showPickerThree: false,\r\n      pickerShow: false,\r\n      idCode: null,\r\n      areaList,\r\n      pickerType: 'one',\r\n      areaPicker: false,\r\n      // credTypeColumns: ['居民身份证', '居民户口簿', '护照', '军官证', '驾驶证', '港澳居民来往内地通行证', '台湾居民来往内地通行证', '其他法定有效证件'],\r\n      credTypeColumns: [],\r\n      genderColumns: ['请选择性别', '女', '男'],\r\n      ruleForm: {\r\n        name: '',\r\n        identityTypeText: '',\r\n        identityType: '',\r\n        identityCode: '',\r\n        gender: '',\r\n        genderText: '',\r\n        age: '',\r\n        phoneNumber: '',\r\n        address: '',\r\n        city: '',\r\n        county: '',\r\n        province: '',\r\n        goodAddress: ''\r\n      },\r\n      resDacontent: {}\r\n    }\r\n  },\r\n  mounted () {\r\n    // this.onSearch()\r\n  },\r\n  created () {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    formatterTime (val) {\r\n      return val !== null ? moment(val).format('yyyy-MM-DD') : ''\r\n    },\r\n    validator (val) {\r\n      if (this.ruleForm.identityTypeText === '身份证') {\r\n        const card15 = /^[1-9]\\d{5}\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{2}[0-9Xx]$/\r\n        const card18 = /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/\r\n        return card15.test(val) || card18.test(val)\r\n      } else {\r\n        const card5 = /[\\u4E00-\\u9FA5]/g\r\n        return !card5.test(val)\r\n      }\r\n    },\r\n    validatorAge (val) {\r\n      console.log(val)\r\n      if (val > 120) {\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n    validatorPhone (val) {\r\n      const card = /^[1][3,4,5,7,8][0-9]{9}$/\r\n      return card.test(val)\r\n    },\r\n    init () {\r\n      getIdentityTypes().then(res => {\r\n        if (res.dataContent !== null) {\r\n          this.handleData(res.dataContent)\r\n        }\r\n      }).catch(err => {\r\n        Message.error(err.message)\r\n      })\r\n    },\r\n    handleData (data) {\r\n      const arr = []\r\n      this.credTypeColumns = []\r\n      data.forEach(element => {\r\n        const obj = {}\r\n        obj.code = element.code\r\n        obj.text = element.name\r\n        arr.push(obj)\r\n      })\r\n      this.credTypeColumns = arr\r\n    },\r\n    //\r\n    onClick (name, title) {\r\n      if (name === 'b') {\r\n        this.loading = false\r\n        this.finished = true\r\n      }\r\n    },\r\n    //\r\n    onConfirmCred (value, index) {\r\n      this.ruleForm.identityTypeText = value.text\r\n      this.ruleForm.identityType = value.code\r\n      this.showPickerOne = false\r\n    },\r\n    onConfirmGender (value, index) {\r\n      if (value === '请选择性别') {\r\n        this.ruleForm.genderText = ''\r\n      } else if (value === '男') {\r\n        this.ruleForm.gender = 'Male'\r\n        this.ruleForm.genderText = '男'\r\n      } else {\r\n        this.ruleForm.gender = 'Female'\r\n        this.ruleForm.genderText = '女'\r\n      }\r\n      this.showPickerTwo = false\r\n    },\r\n    onConfirmArea (value) {\r\n      // this.ruleForm.address = value\r\n      if (value.length >= 0) {\r\n        this.ruleForm.province = value[0].name\r\n        this.ruleForm.city = value[1].name\r\n        this.ruleForm.county = value[2].name\r\n        this.ruleForm.goodAddress = value[0].name + value[1].name + value[2].name\r\n      }\r\n      this.showPickerThree = false\r\n    },\r\n    onSubmit (values) {\r\n      const obj = {\r\n        address: {\r\n          address: this.ruleForm.address,\r\n          city: this.ruleForm.city,\r\n          county: this.ruleForm.county,\r\n          province: this.ruleForm.province\r\n        },\r\n        age: this.ruleForm.age,\r\n        gender: this.ruleForm.gender,\r\n        identityCode: this.ruleForm.identityCode,\r\n        identityType: this.ruleForm.identityType,\r\n        name: this.ruleForm.name,\r\n        phoneNumber: this.ruleForm.phoneNumber\r\n      }\r\n      collectInfo(obj).then(res => {\r\n        this.resDacontent = {}\r\n        this.resDacontent = res.dataContent\r\n        this.visible = true\r\n      }).catch(err => {\r\n        if (err) {\r\n          Dialog.alert({\r\n            title: '注意',\r\n            message: err.message\r\n          }).then(() => {\r\n            // on close+\r\n          })\r\n        }\r\n      })\r\n    },\r\n    onFailed (errorInfo) {\r\n      // errorInfo: { values: object, errors: object[] }\r\n      if (errorInfo.errors.length > 0) {\r\n        Dialog.alert({\r\n          title: '注意',\r\n          message: (errorInfo.errors)[0].message,\r\n          confirmButtonColor: '#004B97'\r\n        }).then(() => {\r\n        // on close+\r\n        })\r\n      }\r\n    },\r\n    closedHandle () {\r\n      this.cleanFormData()\r\n      this.resDacontent = {}\r\n      this.visible = false\r\n    },\r\n    cleanFormData () {\r\n      this.ruleForm = {\r\n        name: '',\r\n        identityTypeText: '',\r\n        identityType: '',\r\n        identityCode: '',\r\n        gender: '',\r\n        genderText: '',\r\n        age: '',\r\n        phoneNumber: '',\r\n        address: '',\r\n        city: '',\r\n        county: '',\r\n        province: '',\r\n        goodAddress: ''\r\n      }\r\n    },\r\n    onSearch () {\r\n      this.loading = true\r\n      if (this.validatorPhone(this.phoneValue)) {\r\n        getOrderInfo(this.phoneValue).then(res => {\r\n          console.log(res)\r\n          if (res.dataContent !== null) {\r\n            this.list = res.dataContent\r\n          }\r\n          this.loading = false\r\n        }).catch(err => {\r\n          Message.error(err.message)\r\n          this.loading = false\r\n        })\r\n      } else {\r\n        Dialog.alert({\r\n          title: '注意',\r\n          message: '请输入正确手机号码',\r\n          confirmButtonColor: '#004B97'\r\n        }).then(() => {\r\n          this.list = []\r\n        // on close+\r\n        })\r\n      }\r\n    },\r\n    cellClick (e) {\r\n      this.resDacontent.id = e.currentTarget.id\r\n      this.visible = true\r\n    }\r\n  }\r\n}\r\n",null]}